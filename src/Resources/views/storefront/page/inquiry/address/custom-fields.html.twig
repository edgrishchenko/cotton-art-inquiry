{% block page_checkout_inquiry_method_type %}
    <div class="custom-field-block confirm-inquiry-method-type">
        {% block page_checkout_inquiry_method_type_header %}
            <div class="card-title">
                {{ "inquiry.finishingMethodTypeHeader"|trans|sw_sanitize }}
            </div>
        {% endblock %}

        {% block page_checkout_inquiry_method_type_control %}
            <div class="form-method-type">
                <label class="form-label sr-only visually-hidden" for="custom_cottonartinquiry_method_type">
                    {{ "customFields.custom_cottonartinquiry_method_type"|trans|sw_sanitize }}
                </label>
                <fieldset>
                    <ul>
                        {% for methodType in finishingMethodOptions %}
                            <li>
                                <input form="inquiryRegister" type="checkbox" id="{{ methodType }}" name="custom_cottonartinquiry_method_type[]"
                                       value="{{ methodType }}" onchange="checkboxValidation('.form-method-type');" required="required" />
                                <label for="{{ methodType }}">{{ ("inquiry." ~ methodType ~ "Option")|trans|sw_sanitize }}</label>
                            </li>
                        {% endfor %}
                    </ul>
                </fieldset>
            </div>
        {% endblock %}
    </div>
{% endblock %}

{% block page_checkout_inquiry_logo_placement %}
    <div class="custom-field-block confirm-inquiry-logo-placement">
        {% block page_checkout_inquiry_logo_placement_header %}
            <div class="card-title">
                {{ "inquiry.logoPlacementHeader"|trans|sw_sanitize }}
            </div>
        {% endblock %}

        {% block page_checkout_inquiry_logo_placement_control %}
            <div class="form-logo-placement">
                <label class="form-label sr-only visually-hidden" for="inquiryLogoPlacement">
                    {{ "customFields.custom_cottonartinquiry_logo_placement"|trans|sw_sanitize }}
                </label>
                <fieldset>
                    <ul>
                        {% for logoPlacement in logoPlacementOptions %}
                            <li class="{{ logoPlacement }}">
                                <input form="inquiryRegister" type="checkbox" id="{{ logoPlacement }}" name="custom_cottonartinquiry_logo_placement[]" value="{{ logoPlacement }}"
                                       onchange="checkboxValidation('.form-logo-placement', {{ logoPlacement }});" required="required"/>
                                <img class="logo-place-img" src="{{ logoMedia[logoPlacement] }}" alt="{{ logoPlacement }}" width="60" height="60">
                                <label for="{{ logoPlacement }}">{{ ("inquiry." ~ logoPlacement) |trans|sw_sanitize }}</label>
                                <input type="file"
                                       id="{{ logoPlacement ~ "File" }}"
                                       form="inquiryRegister"
                                       name="{{ logoPlacement ~ "File" }}"
                                       {% if allowedMimeTypes %}accept="{{ allowedMimeTypes }}"{% endif %}
                                       onchange="checkboxValidation('.form-logo-placement', {{ logoPlacement }});"
                                />
                                <img class="logo-upload-img" src="{{ uploadFileLogo }}" alt="{{ logoPlacement }}" height="60">
                                <label class="upload-file-label" for="logo-upload-img">{{ "inquiry.dataUpload" |trans|sw_sanitize }}</label>
                                <span class="uploaded-section uploaded-filename" style="display:none"></span>
                                <input class="uploaded-section delete-file" type="checkbox" style="display:none" onchange="deleteFile({{ logoPlacement }});"/>
                                <label class="uploaded-section delete-file-label" for="delete-file" style="display:none">&#10005;</label>
                            </li>
                        {% endfor %}
                    </ul>
                </fieldset>
            </div>
        {% endblock %}
    </div>
{% endblock %}

{% block page_checkout_inquiry_logo_color %}
    <div class="custom-field-block confirm-inquiry-logo-color">
        {% block page_checkout_inquiry_logo_color_header %}
            <div class="card-title">
                {{ "inquiry.logoColorHeader"|trans|sw_sanitize }}
                <span class="logo-color-note"> {{ "inquiry.logoColorNote"|trans|sw_sanitize }} </span>
            </div>
        {% endblock %}

        {% block page_checkout_inquiry_logo_color_control %}
            <div class="form-logo-color">
                <label class="form-label sr-only visually-hidden" for="custom_cottonartinquiry_logo_color">
                    {{ "customFields.custom_cottonartinquiry_logo_color"|trans|sw_sanitize }}
                </label>
                <input type="text" name="custom_cottonartinquiry_logo_color" id="inquiryLogoColor" form="inquiryRegister"
                       maxlength="35" pattern="^[A-Za-z0-9 ]*[A-Za-z0-9][A-Za-z0-9 ]*$"/>
            </div>
        {% endblock %}
    </div>
{% endblock %}

{% block page_checkout_inquiry_delivery_duration %}
    <div class="custom-field-block confirm-inquiry-delivery-duration">
        {% block page_checkout_inquiry_delivery_duration_header %}
        {% endblock %}

        {% block page_checkout_inquiry_delivery_duration_control %}
            <div class="form-delivery-duration">
                <label class="form-label sr-only visually-hidden" for="custom_cottonartinquiry_delivery_duration">
                    {{ "customFields.custom_cottonartinquiry_delivery_duration"|trans|sw_sanitize }}
                </label>
                <fieldset>
                    <ul>
                        {% for deliveryType in deliveryOptions %}
                            <li>
                                <input form="inquiryRegister" type="checkbox" id="{{ deliveryType }}" name="custom_cottonartinquiry_delivery_duration[]" value="{{ deliveryType }}"
                                       onchange="checkboxValidation('.form-delivery-duration', '', {{ deliveryType }});" required="required"/>
                                <label for="{{ deliveryType }}">{{ ("inquiry." ~ deliveryType ~ "Delivery")|trans|sw_sanitize }}</label>
                            </li>
                        {% endfor %}
                    </ul>
                </fieldset>
            </div>
        {% endblock %}
    </div>
{% endblock %}

{% block page_checkout_inquiry_comment %}
    <div class="custom-field-block confirm-inquiry-comment">
        {% block page_checkout_inquiry_comment_header %}
            <div class="card-title">
                {{ "inquiry.inquiryCommentHeader"|trans|sw_sanitize }}
            </div>
        {% endblock %}
        {% block page_checkout_inquiry_comment_control %}
            <div class="form-group">
                <label class="form-label sr-only visually-hidden" for="custom_cottonartinquiry_comment">
                    {{ "customFields.custom_cottonartinquiry_comment"|trans|sw_sanitize }}
                </label>
                <textarea class="form-control" name="custom_cottonartinquiry_comment" id="inquiryComment" rows="5" form="inquiryRegister"></textarea>
            </div>
        {% endblock %}
    </div>
{% endblock %}

<script>
    function checkboxValidation(parentClass, logoPlacement = '', deliveryType = '') {
        const parentForm = document.querySelector(parentClass);
        const checkboxes = parentForm.querySelectorAll('input[type=checkbox]:not(.delete-file)');

        if (parentForm.querySelectorAll('input[type=checkbox]:checked:not(.delete-file)').length > 0) {
            checkboxes.forEach((element) => element.removeAttribute('required'));

            if (parentClass === '.form-delivery-duration') {
                uncheckOppositeOption(deliveryType);
            }
        } else {
            checkboxes.forEach((element) => element.setAttribute('required', 'required'));
        }

        if (parentClass === '.form-logo-placement') {
            checkFileUpload(logoPlacement);
        }
    }

    function checkFileUpload(logoPlacement)
    {
        const fileCheckbox = document.querySelector('#' + logoPlacement.value);
        const fileInput = document.querySelector('#' + logoPlacement.value + 'File');

        if (fileCheckbox.checked && fileInput.files.length === 0) {
            fileInput.setAttribute('required', 'required');
        } else {
            fileInput.removeAttribute('required');
        }

        if (this.event.target.type === 'file') {
            if (fileInput.files.length !== 0) {
                fileCheckbox.checked = true;
                showFilename(logoPlacement, fileInput);
            }
        } else if (this.event.target.type === 'checkbox') {
            if (!fileCheckbox.checked) {
                fileInput.value = null;
            }
        }
    }

    function showFilename(logoPlacement, fileInput)
    {
        document.querySelector('.' + logoPlacement.value + ' .logo-upload-img').style.display = 'none';
        document.querySelector('.' + logoPlacement.value + ' .upload-file-label').style.display = 'none';
        document.querySelector('#' + logoPlacement.value + 'File').style.display = 'none';

        var uploadedSections = document.querySelectorAll('.' + logoPlacement.value + ' .uploaded-section');
        uploadedSections.forEach((element) => element.style.display = 'block');

        document.querySelector('.' + logoPlacement.value + ' .uploaded-filename').textContent = fileInput.files[0].name;
    }

    function deleteFile(logoPlacement)
    {
        document.querySelector('.' + logoPlacement.value + ' .logo-upload-img').style.display = 'block';
        document.querySelector('.' + logoPlacement.value + ' .upload-file-label').style.display = 'block';
        document.querySelector('#' + logoPlacement.value + 'File').style.display = 'block';

        var uploadedSections = document.querySelectorAll('.' + logoPlacement.value + ' .uploaded-section');
        uploadedSections.forEach((element) => element.style.display = 'none');

        const fileInput = document.querySelector('#' + logoPlacement.value + 'File');
        fileInput.files = null;
        fileInput.value = null;
        document.querySelector('#' + logoPlacement.value).checked = false;

        const parentForm = document.querySelector('.form-logo-placement');
        const checkboxes = parentForm.querySelectorAll('input[type=checkbox]:not(.delete-file)');

        if (parentForm.querySelectorAll('input[type=checkbox]:checked:not(.delete-file)').length > 0) {
            checkboxes.forEach((element) => element.removeAttribute('required'));
        } else {
            checkboxes.forEach((element) => element.setAttribute('required', 'required'));
        }
    }

    function uncheckOppositeOption(deliveryType)
    {
        const deliveryForm = document.querySelector('.form-delivery-duration');
        const checkboxes = deliveryForm.querySelectorAll('input[type=checkbox]');

        checkboxes.forEach((element) => {
            if (element.id !== deliveryType.value) {
                element.checked = false;
            }
        });
    }
</script>
